#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.8 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 69 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 8 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 8 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 148 0 211 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1           0 2943 0 28 3 12 #"#lang racket"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;Scheme Request for Implementation"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 6 #"srfi/1"
0 0 24 3 2 #") "
0 0 17 3 39 #";; This srfi works with pairs and lists"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 7 #"srfi/13"
0 0 24 3 2 #") "
0 0 17 3 40 #";; This srfi works with String Libraries"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 7 #"srfi/48"
0 0 24 3 2 #") "
0 0 17 3 30 #";; Intermediate Format Strings"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"racket/draw"
0 0 24 3 1 #" "
0 0 14 3 7 #"net/url"
0 0 24 3 2 #") "
0 0 17 3 43 #";; Retrive image from website/location path"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #";; This function retrieves the cdr of the assqlist pair where the id"
 #" is equal to."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"assq-ref"
0 0 24 3 1 #" "
0 0 14 3 8 #"assqlist"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 4 #"assq"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 8 #"assqlist"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         769 21           0 0           0 127 0 17 3 26
#";; To execute the function"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"command"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 5 #"input"
0 0 24 3 2 #" ("
0 0 14 3 9 #"read-line"
0 0 24 3 3 #")) "
0 0 17 3 20 #";; Allows user input"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 13 #"string-tokens"
0 0 24 3 2 #" ("
0 0 14 3 15 #"string-tokenize"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 3 #")) "
0 0 17 3 53 #";; converting an entire string into a list of strings"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 6 #"tokens"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 14 #"string->symbol"
0 0 24 3 1 #" "
0 0 14 3 13 #"string-tokens"
0 0 24 3 3 #")) "
0 0 17 3 26 #";; map strings into a list"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 3 #"cmd"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"tokens"
0 0 24 3 4 #"))) "
0 0 17 3 30 #";; Read the first string token"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 23 #";; explain the commands"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"help"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 19 3 31 #"\"Usage:\\nsearch <term>\\nquit\\n\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 17 #";; break the loop"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"quit"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"exit"
0 0 24 3 3 #" ))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 15 #";; do something"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"search"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 19 3 24 #"\"Searching for ~a ...\\n\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 6 #"tokens"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 23 #";; handle unknown input"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Huh ?\\n\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"command"
0 0 24 3 3 #")) "
0 0 17 3 25 #";; To execute the command"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; Creating the objects"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"objects"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"a clock\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"a sofa\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 14 #"garage remote\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 7 #"a shoe\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"an"
0 0 19 3 1 #" "
0 0 19 3 12 #"escape rope\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"a knife\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 15 #"basement remote"
0 0 19 3 1 #"\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; Creating the rooms"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"rooms"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 6 #"lobby)"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 8 #"hallway)"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 6 #"swamp)"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 7 #"garage)"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 10 #"courtyard)"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 7 #"garden)"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 9 #"basement)"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 8 #"bedroom)"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 8 #"kitchen)"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 11 #"livingroom)"
0 0 19 3 1 #"\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; Describe the room descriptions within an association list"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"description"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 7 #" lobby."
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 9 #" hallway."
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 7 #" swamp."
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 8 #" garage."
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 11 #" courtyard."
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 8 #" garden."
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 4 #"are "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 10 #" basement."
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 4 #" the"
0 0 19 3 9 #" bedroom."
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 9 #" kitchen."
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 12 #" livingroom."
0 0 19 3 1 #"\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"locked"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"The"
0 0 19 3 1 #" "
0 0 19 3 8 #"basement"
0 0 19 3 1 #" "
0 0 19 3 2 #"is"
0 0 19 3 8 #" locked!"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"The"
0 0 19 3 1 #" "
0 0 19 3 6 #"garage"
0 0 19 3 1 #" "
0 0 19 3 2 #"is"
0 0 19 3 1 #" "
0 0 19 3 8 #"locked!\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         475 21           0 0           0 78 0 24 3 1 #" "
0 0 14 3 6 #"Define"
0 0 24 3 1 #" "
0 0 14 3 4 #"some"
0 0 24 3 1 #" "
0 0 14 3 7 #"actions"
0 0 24 3 1 #" "
0 0 14 3 5 #"which"
0 0 24 3 1 #" "
0 0 14 3 4 #"will"
0 0 24 3 1 #" "
0 0 14 3 7 #"include"
0 0 24 3 1 #" "
0 0 14 3 4 #"into"
0 0 24 3 1 #" "
0 0 14 3 3 #"our"
0 0 24 3 1 #" "
0 0 14 3 13 #"decisiontable"
0 0 24 3 1 #" "
0 0 14 3 10 #"structure."
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 3 #"The"
0 0 24 3 1 #" "
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 4 #"user"
0 0 21 3 1 #"'"
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 1 #" "
0 0 14 3 2 #"in"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 7 #"command"
0 0 24 3 1 #" "
0 0 14 3 4 #"line"
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 15 3 3 #"for"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 8 #"software"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 10 #"understand"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 4 #"what"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 4 #"user"
0 0 21 3 1 #"'"
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 10 #"associated"
0 0 24 3 1 #" "
0 0 14 3 5 #"with."
0           0 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"look"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 14 3 10 #"directions"
0 0 24 3 2 #") "
0 0 14 3 4 #"look"
0 0 24 3 4 #") (("
0 0 14 3 4 #"look"
0 0 24 3 2 #") "
0 0 14 3 4 #"look"
0 0 24 3 4 #") (("
0 0 14 3 7 #"examine"
0 0 24 3 1 #" "
0 0 14 3 4 #"room"
0 0 24 3 2 #") "
0 0 14 3 4 #"look"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"quit"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 14 3 4 #"exit"
0 0 24 3 1 #" "
0 0 14 3 4 #"game"
0 0 24 3 2 #") "
0 0 14 3 4 #"quit"
0 0 24 3 4 #") (("
0 0 14 3 4 #"quit"
0 0 24 3 1 #" "
0 0 14 3 4 #"game"
0 0 24 3 2 #") "
0 0 14 3 4 #"quit"
0 0 24 3 4 #") (("
0 0 14 3 4 #"exit"
0 0 24 3 2 #") "
0 0 14 3 4 #"quit"
0 0 24 3 4 #") (("
0 0 14 3 4 #"quit"
0 0 24 3 2 #") "
0 0 14 3 4 #"quit"
0 0 24 3 4 #") (("
0 0 14 3 3 #"end"
0 0 24 3 2 #") "
0 0 14 3 4 #"quit"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"pick"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 14 3 3 #"get"
0 0 24 3 2 #") "
0 0 14 3 4 #"pick"
0 0 24 3 4 #") (("
0 0 14 3 6 #"pickup"
0 0 24 3 2 #") "
0 0 14 3 4 #"pick"
0 0 24 3 4 #") (("
0 0 14 3 8 #"retrieve"
0 0 24 3 2 #") "
0 0 14 3 4 #"pick"
0 0 24 3 4 #") (("
0 0 14 3 4 #"pick"
0 0 24 3 2 #") "
0 0 14 3 4 #"pick"
0 0 24 3 4 #") (("
0 0 14 3 6 #"obtain"
0 0 24 3 2 #") "
0 0 14 3 4 #"pick"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"drop"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 14 3 3 #"put"
0 0 24 3 2 #") "
0 0 14 3 4 #"drop"
0 0 24 3 4 #") (("
0 0 14 3 4 #"drop"
0 0 24 3 2 #") "
0 0 14 3 4 #"drop"
0 0 24 3 4 #") (("
0 0 14 3 5 #"place"
0 0 24 3 2 #") "
0 0 14 3 4 #"drop"
0 0 24 3 4 #") (("
0 0 14 3 6 #"remove"
0 0 24 3 2 #") "
0 0 14 3 4 #"drop"
0 0 24 3 4 #") (("
0 0 14 3 7 #"release"
0 0 24 3 2 #") "
0 0 14 3 4 #"drop"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"bag"
0 0 24 3 2 #"  "
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 14 3 9 #"inventory"
0 0 24 3 2 #") "
0 0 14 3 3 #"bag"
0 0 24 3 4 #") (("
0 0 14 3 3 #"bag"
0 0 24 3 2 #") "
0 0 14 3 3 #"bag"
0 0 24 3 4 #") (("
0 0 14 3 5 #"items"
0 0 24 3 2 #") "
0 0 14 3 3 #"bag"
0 0 24 3 4 #") (("
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 14 3 3 #"bag"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"help"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 14 3 4 #"help"
0 0 24 3 2 #") "
0 0 14 3 4 #"help"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"use"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 14 3 3 #"use"
0 0 24 3 2 #") "
0 0 14 3 3 #"use"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         343 21           0 0           0 56 0 24 3 1 #" "
0 0 14 3 10 #"Quasiquote"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 4 #"used"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 7 #"special"
0 0 24 3 1 #" "
0 0 14 3 11 #"properties."
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 16 #"Unquote-splicing"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 4 #"used"
0 0 24 3 1 #" "
0 0 14 3 7 #"because"
0 0 24 3 1 #" "
0 0 14 3 2 #"we"
0 0 24 3 1 #" "
0 0 14 3 4 #"need"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 6 #"remove"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 5 #"extra"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 5 #"would"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 2 #"be"
0 0 24 3 1 #" "
0 0 14 3 9 #"generated"
0 0 24 3 1 #" "
0 0 14 3 3 #"had"
0 0 24 3 1 #" "
0 0 14 3 2 #"we"
0 0 24 3 1 #" "
0 0 14 3 4 #"just"
0 0 24 3 1 #" "
0 0 14 3 4 #"used"
0 0 24 3 1 #" "
0 0 14 3 8 #"unquote."
0           0 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"actions"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 2 #",@"
0 0 14 3 4 #"look"
0 0 24 3 1 #" "
0 0 28 3 2 #",@"
0 0 14 3 4 #"quit"
0 0 24 3 1 #" "
0 0 28 3 2 #",@"
0 0 14 3 4 #"pick"
0 0 24 3 1 #" "
0 0 28 3 2 #",@"
0 0 14 3 4 #"drop"
0 0 24 3 1 #" "
0 0 28 3 2 #",@"
0 0 14 3 3 #"bag"
0 0 24 3 1 #" "
0 0 28 3 2 #",@"
0 0 14 3 3 #"use"
0 0 24 3 1 #" "
0 0 28 3 2 #",@"
0 0 14 3 4 #"help"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"decision"
0 0 14 3 5 #"table"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 2 #"(("
0 0 21 3 1 #"1"
0 0 24 3 3 #" (("
0 0 14 3 5 #"north"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 4 #") (("
0 0 14 3 5 #"south"
0 0 24 3 2 #") "
0 0 21 3 1 #"8"
0 0 24 3 4 #") (("
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 1 #"9"
0 0 24 3 2 #") "
0 0 28 3 2 #",@"
0 0 14 3 7 #"actions"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 21 3 1 #"2"
0 0 24 3 3 #" (("
0 0 14 3 5 #"south"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 4 #") (("
0 0 14 3 5 #"north"
0 0 24 3 2 #") "
0 0 21 3 1 #"7"
0 0 24 3 4 #") (("
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 28 3 2 #",@"
0 0 14 3 7 #"actions"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 21 3 1 #"3"
0 0 24 3 3 #" (("
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 1 #"6"
0 0 24 3 4 #") (("
0 0 14 3 5 #"north"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 28 3 2 #",@"
0 0 14 3 7 #"actions"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 21 3 1 #"4"
0 0 24 3 3 #" (("
0 0 14 3 5 #"north"
0 0 24 3 2 #") "
0 0 21 3 1 #"8"
0 0 24 3 4 #") (("
0 0 14 3 5 #"south"
0 0 24 3 1 #" "
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 4 #") (("
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 1 #"7"
0 0 24 3 2 #") "
0 0 28 3 2 #",@"
0 0 14 3 7 #"actions"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 21 3 1 #"5"
0 0 24 3 3 #" (("
0 0 14 3 5 #"south"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 4 #") (("
0 0 14 3 5 #"north"
0 0 24 3 1 #" "
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 4 #") (("
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 28 3 2 #",@"
0 0 14 3 7 #"actions"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 21 3 1 #"6"
0 0 24 3 3 #" (("
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 4 #") (("
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 28 3 2 #",@"
0 0 14 3 7 #"actions"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 21 3 1 #"7"
0 0 24 3 3 #" (("
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 28 3 2 #",@"
0 0 14 3 7 #"actions"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 21 3 1 #"8"
0 0 24 3 3 #" (("
0 0 14 3 5 #"north"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 4 #") (("
0 0 14 3 5 #"south"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 28 3 2 #",@"
0 0 14 3 7 #"actions"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 21 3 1 #"9"
0 0 24 3 3 #" (("
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 4 #") (("
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 28 3 2 #",@"
0 0 14 3 7 #"actions"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 21 3 2 #"10"
0 0 24 3 3 #" (("
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 1 #"9"
0 0 24 3 4 #") (("
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 28 3 2 #",@"
0 0 14 3 7 #"actions"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         385 21           0 0           0 63 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 4 #"hash"
0 0 24 3 1 #" "
0 0 14 3 6 #"tables"
0 0 24 3 1 #" "
0 0 14 3 3 #"are"
0 0 24 3 1 #" "
0 0 15 3 7 #"defined"
0 0 24 3 1 #" "
0 0 14 3 2 #"in"
0 0 24 3 1 #" "
0 0 14 3 5 #"order"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 7 #"support"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 7 #"mutable"
0 0 24 3 1 #" "
0 0 14 3 4 #"data"
0 0 24 3 1 #" "
0 0 14 3 9 #"structure"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 4 #"will"
0 0 24 3 1 #" "
0 0 14 3 7 #"contain"
0 0 24 3 1 #" "
0 0 14 3 3 #"our"
0 0 24 3 1 #" "
0 0 14 3 9 #"reference"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 7 #"objects"
0 0 24 3 1 #" "
0 0 14 3 9 #"available"
0 0 24 3 1 #" "
0 0 14 3 2 #"in"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 5 #"rooms"
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 4 #"user"
0 0 24 3 1 #" "
0 0 14 3 9 #"inventory"
0           0 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"objectdb"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-hash"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"inventorydb"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-hash"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; This function adds an object to the database"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"add-object"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 6 #"object"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 28 #";; Checks if hash key exists"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hash-has-key?"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 65
#";; If exists, program assigns to record the content of the key id"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 6 #"record"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 75
(
 #";; The new item is added, followed by the old items stored in the da"
 #"tabase."
) 0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"object"
0 0 24 3 1 #" "
0 0 14 3 6 #"record"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 59
#";; if the key is not used, then the item is added directly."
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"object"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         553 21           0 0           0 91 0 24 3 1 #" "
0 0 14 3 3 #"Use"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 8 #"for-each"
0 0 24 3 1 #" "
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 3 #"add"
0 0 24 3 1 #" "
0 0 14 3 5 #"every"
0 0 24 3 1 #" "
0 0 14 3 6 #"single"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 14 3 2 #"in"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 5 #"assoc"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 8 #"objectdb"
0 0 24 3 1 #" "
0 0 14 3 5 #"using"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 10 #"add-object"
0 0 24 3 1 #" "
0 0 14 3 9 #"function."
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 3 #"The"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 7 #"returns"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 7 #"objects"
0 0 24 3 1 #" "
0 0 14 3 5 #"assoc"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"room"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 3 #"The"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 14 3 7 #"returns"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 7 #"objects"
0 0 24 3 1 #" "
0 0 14 3 5 #"assoc"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"room"
0           0 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"add-objects"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"for-each"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 17 3 55 #";; Each of the list is added to the object db in order."
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"add-object"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #"))) "
0 0 14 3 7 #"objects"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; Populate objectdb with the items provided in the object"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"add-objects"
0 0 24 3 1 #" "
0 0 14 3 8 #"objectdb"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; Displays to user if there are no items in the room or in their in"
 #"ventory"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"empty-room-bag"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 45 #";; If the user wants to check their inventory"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"bag"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 54 #";; Displays message notifying users they have no items"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 40 #"\"You have no items in your inventory.\\n\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 58
#";; If user does not check their inventory, check the room."
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 36 #"\"There are no items in this room.\\n\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; Displays the objects that are in the room and/or in our inventory"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"display-objects"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 20 #";; If hash key exist"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hash-has-key?"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 42 #";; Join string if there are multiple items"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 6 #"record"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"output"
0 0 24 3 2 #" ("
0 0 14 3 11 #"string-join"
0 0 24 3 1 #" "
0 0 14 3 6 #"record"
0 0 24 3 1 #" "
0 0 19 3 7 #"\" and \""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 57 #";; Depending on the parameters, provide different answers"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"output"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 19 #";; If the id is bag"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"bag"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 27 #";; Print items in inventory"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 16 #" carrying ~a.\\n\""
0 0 24 3 1 #" "
0 0 14 3 6 #"output"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 22 #";; Print items in room"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"can"
0 0 19 3 11 #" see ~a.\\n\""
0 0 24 3 1 #" "
0 0 14 3 6 #"output"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 14 #"empty-room-bag"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 14 #"empty-room-bag"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         415 21           0 0           0 68 0 24 3 1 #" "
0 0 14 3 4 #"This"
0 0 24 3 1 #" "
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 14 3 8 #"examines"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 4 #"data"
0 0 24 3 1 #" "
0 0 15 3 3 #"for"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 6 #"single"
0 0 24 3 1 #" "
0 0 14 3 4 #"room"
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 5 #"looks"
0 0 24 3 1 #" "
0 0 15 3 3 #"for"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 14 3 7 #"entries"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 3 #"e.g"
0 0 24 3 3 #" (("
0 0 14 3 5 #"north"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 28 3 1 #"."
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 2 #"It"
0 0 24 3 1 #" "
0 0 14 3 4 #"does"
0 0 24 3 1 #" "
0 0 14 3 4 #"this"
0 0 24 3 1 #" "
0 0 14 3 2 #"by"
0 0 24 3 1 #" "
0 0 14 3 8 #"checking"
0 0 24 3 1 #" "
0 0 15 3 3 #"for"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 1 #" "
0 0 14 3 2 #"at"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 8 #"position"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 4 #"each"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0           0 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"get-directions"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 76
(
 #";; List decisiontable assigns the id of the decisiontable searched t"
 #"o record"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 6 #"record"
0 0 24 3 2 #" ("
0 0 14 3 4 #"assq"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 13 #"decisiontable"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 6 #"assign"
0 0 24 3 2 #" ("
0 0 14 3 4 #"assq"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 5 #"rooms"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 109
(
 #";; The cdr of record goes through filter. If the second value is a n"
 #"umber (a room), it is assigned to result."
) 0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 80
(
 #";; Length n is the possible rooms the user can access in their curre"
 #"nt position."
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 7 #"number?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 5 #"))) ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 6 #"record"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 1 #"n"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 37 #";; Conditions to check the directions"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 29 #";; If there are no directions"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 53 #"\"You appear to have entered a room with no exits. \\n\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 81
(
 #";; Get the direction and extract them to string using the slist->str"
 #"ing function."
) 0 0 24 29 1 #"\n"
0 0 24 3 14 #"            (("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 34 #"\"You can see an exit to the ~a.\\n\""
0 0 24 3 2 #" ("
0 0 14 3 13 #"slist->string"
0 0 24 3 2 #" ("
0 0 14 3 4 #"caar"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 4 #"let*"
0 0 24 3 2 #" ("
0 0 17 3 8 #";; losym"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 4 #"this"
0 0 17 3 1 #" "
0 0 17 3 7 #"instant"
0 0 17 3 1 #" "
0 0 17 3 7 #"creates"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 2 #"by"
0 0 17 3 1 #" "
0 0 17 3 10 #"extracting"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 2 #"id"
0 0 17 3 1 #" "
0 0 17 3 12 #"of the rooms"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 17 3 6 #";; and"
0 0 17 3 1 #" "
0 0 17 3 7 #"consing"
0 0 17 3 1 #" "
0 0 17 3 2 #"it"
0 0 17 3 1 #" "
0 0 17 3 4 #"with"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 10 #"direction "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 11 #"make a list"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 5 #"losym"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 4 #"assv"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 5 #"rooms"
0 0 24 3 6 #"))))) "
0 0 14 3 6 #"result"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 17 3 93
(
 #";; lostr gets the list from losym and converts every list into a str"
 #"ing using symbol->string."
) 0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 5 #"lostr"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 11 #"string-join"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 14 #"symbol->string"
0 0 24 3 2 #" ("
0 0 14 3 4 #"caar"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                          ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 24 3 4 #"))) "
0 0 14 3 5 #"losym"
0 0 24 3 6 #")))   "
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 49 #";;(lostr (map (\316\273 (x) (slist->string x)) losym)))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 32 #"\"You can see exits to the ~a.\\n\""
0 0 24 3 2 #" ("
0 0 14 3 11 #"string-join"
0 0 24 3 1 #" "
0 0 14 3 5 #"lostr"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"and \""
0 0 24 3 8 #"))))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";; Maps the paramter to the list of atoms then joins it."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"slist->string"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"string-join"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 14 #"symbol->string"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; Picking up objects"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"pick-item"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 41 #";; Only the name of the item is retrieved"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"item"
0 0 24 3 2 #" ("
0 0 14 3 11 #"string-join"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 37 #"remove-object-from-room-and-inventory"
0 0 24 3 1 #" "
0 0 14 3 8 #"objectdb"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; Removing objects from inventory and adding it to the room"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"put-item"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 42 #";; Only the name of the item is retrieved."
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"item"
0 0 24 3 2 #" ("
0 0 14 3 11 #"string-join"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 28 #"remove-object-from-inventory"
0 0 24 3 1 #" "
0 0 14 3 11 #"inventorydb"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         349 21           0 0           0 57 0 17 3 59
#";; Picking up and dropping items from/to the room/inventory"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"get-drop-items"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 14 3 3 #"did"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 19 #";; If the id is bag"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"bag"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 31 #";; Remove object from inventory"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 37 #"remove-object-from-room-and-inventory"
0 0 24 3 1 #" "
0 0 14 3 11 #"inventorydb"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 14 3 3 #"did"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 26 #";; Remove object from room"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 37 #"remove-object-from-room-and-inventory"
0 0 24 3 1 #" "
0 0 14 3 8 #"objectdb"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 14 3 3 #"did"
0 0 24 3 3 #")))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; Displays what is inside your inventory"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"display-inventory"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"display-objects"
0 0 24 3 1 #" "
0 0 14 3 11 #"inventorydb"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"bag"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; Remove object from database"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 37 #"remove-object-from-room-and-inventory"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 28 #";; Checks if hash key exists"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hash-has-key?"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 13 #";; If exists,"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 6 #"record"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 42 #";; result is the list of items in the room"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 6 #"remove"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 17 #"string-suffix-ci?"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 14 3 6 #"record"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 72
(
 #";; item is the difference with the previous list e.g. the item colle"
 #"cted"
) 0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"item"
0 0 24 3 2 #" ("
0 0 14 3 15 #"lset-difference"
0 0 24 3 1 #" "
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"record"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 33 #";; Checks if the item is not null"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 44 #";; If the id matches the id in the inventory"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 3 #";;("
0 0 17 3 1 #"i"
0 0 17 3 1 #"f"
0 0 17 3 2 #" ("
0 0 17 3 12 #"eq? id 'bag)"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 3 #"not"
0 0 19 3 1 #" "
0 0 19 3 8 #"carrying"
0 0 19 3 1 #" "
0 0 19 3 4 #"that"
0 0 19 3 9 #" item!\\n\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"I"
0 0 19 3 1 #" "
0 0 19 3 4 #"dont"
0 0 19 3 1 #" "
0 0 19 3 3 #"see"
0 0 19 3 1 #" "
0 0 19 3 4 #"that"
0 0 19 3 1 #" "
0 0 19 3 4 #"item"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 9 #" room!\\n\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"bag"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 49 #";; Game notifies user which item has been removed"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 7 #"Removed"
0 0 19 3 1 #" "
0 0 19 3 2 #"~a"
0 0 19 3 1 #" "
0 0 19 3 4 #"from"
0 0 19 3 1 #" "
0 0 19 3 4 #"your"
0 0 19 3 8 #" bag.\\n\""
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 58
#";; A removed item from inventory is put back into the room"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"add-object"
0 0 24 3 1 #" "
0 0 14 3 8 #"objectdb"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 20 #";; Updates inventory"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"bag"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 46 #";; If the item id matches the item in the room"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 45 #";; When the user picks up an item from a room"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Added"
0 0 19 3 1 #" "
0 0 19 3 2 #"~a"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 1 #" "
0 0 19 3 4 #"your"
0 0 19 3 8 #" bag.\\n\""
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 36 #";; The item s added to the inventory"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"add-object"
0 0 24 3 1 #" "
0 0 14 3 11 #"inventorydb"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"bag"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 22 #";; New object is added"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 66
#";; A condition to check if the user has picked up a specific item."
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                  (("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 2 #") "
0 0 19 3 1 #"\""
0 0 19 3 2 #"an"
0 0 19 3 1 #" "
0 0 19 3 6 #"escape"
0 0 19 3 6 #" rope\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 17 3 61
#";; Shows message that the user has escaped the haunted house."
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 4 #"have"
0 0 19 3 1 #" "
0 0 19 3 5 #"found"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 6 #"escape"
0 0 19 3 1 #" "
0 0 19 3 4 #"rope"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 4 #"have"
0 0 19 3 1 #" "
0 0 19 3 12 #"successfully"
0 0 19 3 1 #" "
0 0 19 3 7 #"escaped"
0 0 19 3 1 #" "
0 0 19 3 4 #"from"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 7 #"Haunted"
0 0 19 3 8 #" House!\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 17 3 40 #";; User completes game, game terminates."
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 4 #"exit"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 17 3 46 #";; If the item is picked up is a garage remote"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                  (("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 2 #") "
0 0 19 3 1 #"\""
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 6 #"garage"
0 0 19 3 8 #" remote\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 4 #"have"
0 0 19 3 1 #" "
0 0 19 3 5 #"found"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 6 #"garage"
0 0 19 3 1 #" "
0 0 19 3 7 #"remote."
0 0 19 3 1 #" "
0 0 19 3 3 #"The"
0 0 19 3 1 #" "
0 0 19 3 6 #"garage"
0 0 19 3 1 #" "
0 0 19 3 2 #"is"
0 0 19 3 1 #" "
0 0 19 3 3 #"now"
0 0 19 3 11 #" unlocked!\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 17 3 49 #";; If the item is picked up is a basement remote."
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                  (("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 2 #") "
0 0 19 3 1 #"\""
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 8 #"basement"
0 0 19 3 8 #" remote\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 4 #"have"
0 0 19 3 1 #" "
0 0 19 3 5 #"found"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 8 #"basement"
0 0 19 3 1 #" "
0 0 19 3 7 #"remote."
0 0 19 3 1 #" "
0 0 19 3 3 #"The"
0 0 19 3 1 #" "
0 0 19 3 8 #"basement"
0 0 19 3 1 #" "
0 0 19 3 2 #"is"
0 0 19 3 1 #" "
0 0 19 3 3 #"now"
0 0 19 3 11 #" unlocked!\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                  (("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 2 #") "
0 0 19 3 1 #"\""
0 0 19 3 1 #"a"
0 0 19 3 7 #" knife\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 26 #"\"Your anxiety is unstable."
0 0 19 3 24 #" You killed yourself...\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 4 #"exit"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 17 3 26 #";; The new object is saved"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 9 #")))))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; Remove an object from your inventory"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 28 #"remove-object-from-inventory"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 28 #";; Checks if hash key exists"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hash-has-key?"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"bag"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 12 #";; If exists"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 6 #"record"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"bag"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 6 #"remove"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 17 #"string-suffix-ci?"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 14 3 6 #"record"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"item"
0 0 24 3 2 #" ("
0 0 14 3 15 #"lset-difference"
0 0 24 3 1 #" "
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"record"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 3 #"not"
0 0 19 3 1 #" "
0 0 19 3 8 #"carrying"
0 0 19 3 1 #" "
0 0 19 3 4 #"that"
0 0 19 3 1 #" "
0 0 19 3 4 #"item"
0 0 19 3 5 #" !\\n\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 7 #"Removed"
0 0 19 3 1 #" "
0 0 19 3 2 #"~a"
0 0 19 3 1 #" "
0 0 19 3 4 #"from"
0 0 19 3 1 #" "
0 0 19 3 4 #"your"
0 0 19 3 8 #" bag.\\n\""
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 10 #"add-object"
0 0 24 3 1 #" "
0 0 14 3 8 #"objectdb"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"bag"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9        1189 21           0 0           0 197 0 17 3 44
#";; Remove object from room to your inventory"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 23 #"remove-object-from-room"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 28 #";; Checks if hash key exists"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hash-has-key?"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 13 #";; If exists,"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 6 #"record"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 42 #";; result is the list of items in the room"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 6 #"remove"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 17 #"string-suffix-ci?"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 14 3 6 #"record"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 72
(
 #";; item is the difference with the previous list e.g. the item colle"
 #"cted"
) 0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"item"
0 0 24 3 2 #" ("
0 0 14 3 15 #"lset-difference"
0 0 24 3 1 #" "
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"record"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 22 #";; If the item is null"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 40 #"\"I don\342\200\231t see that item in the room!\\n\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 25 #"\"Added ~a to your bag.\\n\""
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 33 #";; Adds the item to the inventory"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 10 #"add-object"
0 0 24 3 1 #" "
0 0 14 3 11 #"inventorydb"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"bag"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 59
#";; Checks if the user has an escape rope in their inventory"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               (("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 2 #") "
0 0 19 3 16 #"\"an escape rope\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 61
#";; Shows message that the user has escaped the haunted house."
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 87
(
 #"\"You have found the escape rope, you have successfully escaped from"
 #" the Haunted House!\""
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"exit"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               (("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 2 #") "
0 0 19 3 17 #"\"a garage remote\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 63
#"\"You have found the garage remote. The garage is now unlocked!\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               (("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 2 #") "
0 0 19 3 19 #"\"a basement remote\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 67
(
 #"\"You have found the basement remo"
 #"te. The basement is now unlocked!\""
) 0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 39 #";; The original databse with the result"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 7 #")))))))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; Generates a keyword list based on the id given"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"get-keywords"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 75
(
 #";; Lets the assq-ref of the id we choose in decision table hold into"
 #" 'keys'"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"keys"
0 0 24 3 2 #" ("
0 0 14 3 8 #"assq-ref"
0 0 24 3 1 #" "
0 0 14 3 13 #"decisiontable"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 72
(
 #";; Maps the car of the keys into key. The car of ((north) 1) is (nor"
 #"th)."
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"key"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 3 #")) "
0 0 14 3 4 #"keys"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; A wrapper function which allows us to supply an id and list of to"
 #"kens"
) 0 0 24 29 1 #"\n"
0 0 17 3 38 #";; Returns the matching id of the room"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"lookup"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 6 #"tokens"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 72
(
 #";; Let the record hold the tokens in decisiontable with a id you pro"
 #"vide"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 6 #"record"
0 0 24 3 2 #" ("
0 0 14 3 8 #"assq-ref"
0 0 24 3 1 #" "
0 0 14 3 13 #"decisiontable"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 17 3 43 #";; Keylist holds the keywords from given id"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 7 #"keylist"
0 0 24 3 2 #" ("
0 0 14 3 12 #"get-keywords"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 17 3 65
#";; Holds the index largest number from list-of-lengths into index"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 5 #"index"
0 0 24 3 2 #" ("
0 0 14 3 23 #"index-of-largest-number"
0 0 24 3 2 #" ("
0 0 14 3 15 #"list-of-lengths"
0 0 24 3 1 #" "
0 0 14 3 7 #"keylist"
0 0 24 3 1 #" "
0 0 14 3 6 #"tokens"
0 0 24 3 5 #")))) "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 69
(
 #";; Lists the cadr of the id of the decisiontable and its index given"
 #"."
) 0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"cadr"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 6 #"record"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 21 3 2 #"#f"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; Returning the position of the largest value in our list"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 23 #"index-of-largest-number"
0 0 24 3 1 #" "
0 0 14 3 15 #"list-of-numbers"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 52 #";; Sorts the list of numbers from the greatest value"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 1 #"n"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sort"
0 0 24 3 1 #" "
0 0 14 3 15 #"list-of-numbers"
0 0 24 3 1 #" "
0 0 14 3 1 #">"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 26 #";; Checks if list is empty"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 21 3 2 #"#f"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 42 #";; Returns the index of the greatest value"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"list-index"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #")) "
0 0 14 3 15 #"list-of-numbers"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";; Accepts a keyword list and does a match against a list of tokens"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; Outputs the list in the form: (0 0 0 2 0)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"list-of-lengths"
0 0 24 3 1 #" "
0 0 14 3 7 #"keylist"
0 0 24 3 1 #" "
0 0 14 3 6 #"tokens"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 3 #"set"
0 0 24 3 2 #" ("
0 0 14 3 17 #"lset-intersection"
0 0 24 3 1 #" "
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 6 #"tokens"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 37 #";; apply some weighting to the result"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 3 #"set"
0 0 24 3 3 #") ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 3 #"set"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 7 #"keylist"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; Retrieves description of the location"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"get-description"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 8 #"assq-ref"
0 0 24 3 1 #" "
0 0 14 3 11 #"description"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         109 21           0 0           0 17 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"get-locked"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 8 #"assq-ref"
0 0 24 3 1 #" "
0 0 14 3 6 #"locked"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 3 #")))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; Displays the description"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"display-description"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 40 #";; Outputs the text from the matching id"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"~a\\n\""
0 0 24 3 2 #" ("
0 0 14 3 15 #"get-description"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"help-window"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"\\n "
0 0 19 3 4 #"This"
0 0 19 3 3 #" is"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 4 #"Help"
0 0 19 3 1 #" "
0 0 19 3 9 #"Window.\\n"
0 0 19 29 1 #"\n"
0 0 19 3 11 #"Commands:\\n"
0 0 19 29 1 #"\n"
0 0 19 3 1 #"-"
0 0 19 3 2 #" ("
0 0 19 3 10 #"directions"
0 0 19 3 1 #" "
0 0 19 3 8 #"| look |"
0 0 19 3 1 #" "
0 0 19 3 7 #"examine"
0 0 19 3 1 #" "
0 0 19 3 4 #"room"
0 0 19 3 1 #")"
0 0 19 3 1 #":"
0 0 19 3 1 #" "
0 0 19 3 3 #"Use"
0 0 19 3 1 #" "
0 0 19 3 5 #"these"
0 0 19 3 1 #" "
0 0 19 3 8 #"commands"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 1 #" "
0 0 19 3 4 #"find"
0 0 19 3 1 #" "
0 0 19 3 3 #"out"
0 0 19 3 1 #" "
0 0 19 3 4 #"more"
0 0 19 3 1 #" "
0 0 19 3 11 #"information"
0 0 19 3 1 #" "
0 0 19 3 5 #"about"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 7 #"room.\\n"
0 0 19 29 1 #"\n"
0 0 19 3 1 #"-"
0 0 19 3 2 #" ("
0 0 19 3 3 #"get"
0 0 19 3 1 #" "
0 0 19 3 10 #"| pickup |"
0 0 19 3 1 #" "
0 0 19 3 8 #"retrieve"
0 0 19 3 1 #" "
0 0 19 3 10 #"| pickup |"
0 0 19 3 1 #" "
0 0 19 3 6 #"obtain"
0 0 19 3 1 #")"
0 0 19 3 1 #":"
0 0 19 3 1 #" "
0 0 19 3 3 #"Use"
0 0 19 3 1 #" "
0 0 19 3 5 #"these"
0 0 19 3 1 #" "
0 0 19 3 8 #"commands"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 1 #" "
0 0 19 3 4 #"pick"
0 0 19 3 1 #" "
0 0 19 3 2 #"up"
0 0 19 3 1 #" "
0 0 19 3 2 #"an"
0 0 19 3 1 #" "
0 0 19 3 4 #"item"
0 0 19 3 1 #" "
0 0 19 3 4 #"that"
0 0 19 3 1 #" "
0 0 19 3 2 #"is"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 4 #"room"
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 9 #"currently"
0 0 19 3 1 #" "
0 0 19 3 5 #"in.\\n"
0 0 19 29 1 #"\n"
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 4 #"will"
0 0 19 3 1 #" "
0 0 19 3 4 #"need"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 1 #" "
0 0 19 3 7 #"specify"
0 0 19 3 1 #" "
0 0 19 3 4 #"what"
0 0 19 3 1 #" "
0 0 19 3 4 #"item"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 1 #" "
0 0 19 3 4 #"pick"
0 0 19 3 1 #" "
0 0 19 3 5 #"up.\\n"
0 0 19 29 1 #"\n"
0 0 19 3 1 #"-"
0 0 19 3 5 #" (put"
0 0 19 3 1 #" "
0 0 19 3 8 #"| drop |"
0 0 19 3 1 #" "
0 0 19 3 5 #"place"
0 0 19 3 1 #" "
0 0 19 3 10 #"| remove |"
0 0 19 3 1 #" "
0 0 19 3 7 #"release"
0 0 19 3 1 #")"
0 0 19 3 1 #":"
0 0 19 3 1 #" "
0 0 19 3 3 #"Use"
0 0 19 3 1 #" "
0 0 19 3 5 #"these"
0 0 19 3 1 #" "
0 0 19 3 8 #"commands"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 1 #" "
0 0 19 3 7 #"discard"
0 0 19 3 1 #" "
0 0 19 3 2 #"an"
0 0 19 3 1 #" "
0 0 19 3 4 #"item"
0 0 19 3 1 #" "
0 0 19 3 4 #"fron"
0 0 19 3 1 #" "
0 0 19 3 4 #"your"
0 0 19 3 1 #" "
0 0 19 3 12 #"inventory.\\n"
0 0 19 29 1 #"\n"
0 0 19 3 1 #"-"
0 0 19 3 2 #" ("
0 0 19 3 9 #"inventory"
0 0 19 3 1 #" "
0 0 19 3 7 #"| bag |"
0 0 19 3 1 #" "
0 0 19 3 5 #"items"
0 0 19 3 1 #" "
0 0 19 3 5 #"| i |"
0 0 19 3 1 #")"
0 0 19 3 1 #":"
0 0 19 3 1 #" "
0 0 19 3 3 #"Use"
0 0 19 3 1 #" "
0 0 19 3 5 #"these"
0 0 19 3 1 #" "
0 0 19 3 8 #"commands"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 1 #" "
0 0 19 3 3 #"see"
0 0 19 3 1 #" "
0 0 19 3 4 #"what"
0 0 19 3 1 #" "
0 0 19 3 5 #"items"
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 9 #"currently"
0 0 19 3 1 #" "
0 0 19 3 6 #"own.\\n"
0 0 19 29 1 #"\n"
0 0 19 3 1 #"-"
0 0 19 3 2 #" ("
0 0 19 3 4 #"help"
0 0 19 3 1 #")"
0 0 19 3 1 #":"
0 0 19 3 1 #" "
0 0 19 3 4 #"This"
0 0 19 3 1 #" "
0 0 19 3 7 #"command"
0 0 19 3 1 #" "
0 0 19 3 4 #"will"
0 0 19 3 1 #" "
0 0 19 3 7 #"display"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 4 #"help"
0 0 19 3 1 #" "
0 0 19 3 9 #"window.\\n"
0 0 19 29 1 #"\n"
0 0 19 3 1 #"-"
0 0 19 3 2 #" ("
0 0 19 3 3 #"use"
0 0 19 3 1 #")"
0 0 19 3 1 #":"
0 0 19 3 1 #" "
0 0 19 3 4 #"This"
0 0 19 3 1 #" "
0 0 19 3 7 #"command"
0 0 19 3 1 #" "
0 0 19 3 4 #"will"
0 0 19 3 1 #" "
0 0 19 3 6 #"enable"
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 1 #" "
0 0 19 3 3 #"use"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 3 #"key"
0 0 19 3 2 #" ("
0 0 19 3 2 #"If"
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 4 #"have"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 3 #"key"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 4 #"your"
0 0 19 3 1 #" "
0 0 19 3 9 #"inventory"
0 0 19 3 1 #")"
0 0 19 3 3 #".\\n"
0 0 19 29 1 #"\n"
0 0 19 3 1 #"-"
0 0 19 3 2 #" ("
0 0 19 3 4 #"exit"
0 0 19 3 1 #" "
0 0 19 3 4 #"game"
0 0 19 3 1 #" "
0 0 19 3 13 #"| quit game |"
0 0 19 3 1 #" "
0 0 19 3 4 #"exit"
0 0 19 3 1 #" "
0 0 19 3 8 #"| quit |"
0 0 19 3 1 #" "
0 0 19 3 3 #"end"
0 0 19 3 1 #")"
0 0 19 3 1 #":"
0 0 19 3 1 #" "
0 0 19 3 5 #"These"
0 0 19 3 1 #" "
0 0 19 3 8 #"commands"
0 0 19 3 1 #" "
0 0 19 3 4 #"will"
0 0 19 3 1 #" "
0 0 19 3 5 #"close"
0 0 19 3 1 #" "
0 0 19 3 12 #"the game.\\n\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";; The game loop, starting with the id the user chooses (room they b"
 #"egin in)."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"startgame"
0 0 24 3 1 #" "
0 0 14 3 10 #"initial-id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 3 #" (("
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 10 #"initial-id"
0 0 24 3 3 #") ("
0 0 14 3 11 #"description"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"when"
0 0 24 3 1 #" "
0 0 14 3 11 #"description"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 60
#";; When there is description available to show to the player"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 19 #"display-description"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 15 #"display-objects"
0 0 24 3 1 #" "
0 0 14 3 8 #"objectdb"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 52 #";; If there is no description nor objects to display"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"> \""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 19 #";; Read users input"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 5 #"input"
0 0 24 3 2 #" ("
0 0 14 3 9 #"read-line"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 97
(
 #";; This is from the srfi/13 library. Each string in the users input "
 #"will be split into substrings"
) 0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 13 #"string-tokens"
0 0 24 3 2 #" ("
0 0 14 3 15 #"string-tokenize"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 30 #";; Creates a list of symbols. "
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 6 #"tokens"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 14 #"string->symbol"
0 0 24 3 1 #" "
0 0 14 3 13 #"string-tokens"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 82
(
 #";; Checks the id of the matching action. The greatest action is call"
 #"ed to the code"
) 0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 8 #"response"
0 0 24 3 2 #" ("
0 0 14 3 6 #"lookup"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 6 #"tokens"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 8 #"response"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 14 3 8 #"response"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 59
#";; If the user inputs a token that the game does not recall"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 14 3 8 #"response"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 4 #"huh?"
0 0 19 3 1 #" "
0 0 19 3 1 #"I"
0 0 19 3 1 #" "
0 0 19 3 4 #"didn"
0 0 19 3 1 #"'"
0 0 19 3 1 #"t"
0 0 19 3 1 #" "
0 0 19 3 19 #"understand that!\\n\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 40 #";; To look for directions to other rooms"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 8 #"response"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"look"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 14 #"get-directions"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 47 #";; Token containing a string to pick up an item"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 8 #"response"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"pick"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 37 #";; Picks up the item the user chooses"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"pick-item"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 44 #";; Token containing a string to drop an item"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 8 #"response"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"drop"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 31 #";; Drops the corresponding item"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 8 #"put-item"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 51 #";; Token containing a string to show user inventory"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 8 #"response"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"bag"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 26 #";; Displays user inventory"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 17 #"display-inventory"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 48 #";; Token containing a string to show help window"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 8 #"response"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"help"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 23 #";; Displays help window"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 11 #"help-window"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 45 #";; Token containing a string to quit the game"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 8 #"response"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"quit"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 17 #";; Quits the game"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"So"
0 0 19 3 9 #" Long.\\n\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"exit"
0 0 24 3 7 #")))))))"
0           0
